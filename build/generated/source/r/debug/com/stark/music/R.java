/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.stark.music;

public final class R {
    public static final class anim {
        public static final int album_slide_in_from_left=0x7f040000;
        public static final int album_slide_in_from_right=0x7f040001;
        public static final int album_slide_out_to_left=0x7f040002;
        public static final int album_slide_out_to_right=0x7f040003;
        public static final int empty=0x7f040004;
        public static final int fragment_silde_out_right=0x7f040005;
        public static final int fragment_slide_in_left=0x7f040006;
        public static final int fragment_slide_right_enter=0x7f040007;
        public static final int fragment_slide_right_exit=0x7f040008;
        public static final int popup_enter=0x7f040009;
        public static final int popup_exit=0x7f04000a;
        public static final int search_move_top=0x7f04000b;
    }
    public static final class attr {
        /** 
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f010007;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnWidth=0x7f01000e;
        /** 
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f010003;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
        </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
        </td></tr>
</table>
         */
        public static final int gravity=0x7f010000;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int gridViewStyle=0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x7f01000b;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f010002;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int numColumns=0x7f010010;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int numRows=0x7f010011;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f01000f;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
         */
        public static final int scrollDirectionLandscape=0x7f01000a;
        /** 
             Use this attribute to control which direction the GridView scrolls when in
             portrait orientation
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
         */
        public static final int scrollDirectionPortrait=0x7f010009;
        /** 
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x7f010005;
        /** 
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        
 <attr name="fastScrollEnabled" format="boolean" /> 

             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x7f010008;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f010004;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int stretchMode=0x7f01000d;
        /** 
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        
 <attr name="textFilterEnabled" format="boolean" /> 

             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
         */
        public static final int transcriptMode=0x7f010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x7f01000c;
    }
    public static final class color {
        public static final int album_grey=0x7f070000;
        public static final int alertdialog_pressed_color=0x7f070001;
        public static final int alertdialog_solid_color=0x7f070002;
        public static final int alertdialog_stroke_color=0x7f070003;
        public static final int alpha_grey_bg=0x7f070004;
        public static final int alpha_pink=0x7f070005;
        public static final int artwork_album_color=0x7f070006;
        public static final int artwork_artist_color=0x7f070007;
        public static final int blue=0x7f070008;
        public static final int bottombar_textcolor_selector=0x7f070014;
        public static final int completely_transparent=0x7f070009;
        public static final int grey=0x7f07000a;
        public static final int letter_color=0x7f07000b;
        public static final int light_grey=0x7f07000c;
        public static final int light_pink=0x7f07000d;
        public static final int light_red=0x7f07000e;
        public static final int pink=0x7f07000f;
        public static final int play_activity_bg_color=0x7f070010;
        public static final int red=0x7f070011;
        public static final int search_album_grey=0x7f070012;
        public static final int white=0x7f070013;
    }
    public static final class dimen {
        public static final int activity_horizontal_margin=0x7f080000;
        public static final int activity_vertical_margin=0x7f080001;
    }
    public static final class drawable {
        public static final int add=0x7f020000;
        public static final int add_circle=0x7f020001;
        public static final int add_circle_pressed=0x7f020002;
        public static final int album_selector=0x7f020003;
        public static final int album_tab_off=0x7f020004;
        public static final int album_tab_on=0x7f020005;
        public static final int alertdialog_bottom_row_selector=0x7f020006;
        public static final int alertdialog_center_row_selector=0x7f020007;
        public static final int alertdialog_default_selector=0x7f020008;
        public static final int alertdialog_top_row_selector=0x7f020009;
        public static final int arrow_default=0x7f02000a;
        public static final int arrow_default_left=0x7f02000b;
        public static final int arrow_grey=0x7f02000c;
        public static final int arrow_left_pressed=0x7f02000d;
        public static final int arrow_left_selector=0x7f02000e;
        public static final int arrow_pressed=0x7f02000f;
        public static final int arrow_selector=0x7f020010;
        public static final int edittext_bg_shape=0x7f020011;
        public static final int emotionstore_progresscancelbtn=0x7f020012;
        public static final int example_picture=0x7f020013;
        public static final int gradient_bg_shape=0x7f020014;
        public static final int ic_action_stat_reply=0x7f020015;
        public static final int ic_action_stat_share=0x7f020016;
        public static final int ic_launcher=0x7f020017;
        public static final int ic_stat_music_service_message=0x7f020018;
        public static final int menu_default=0x7f020019;
        public static final int menu_pressed=0x7f02001a;
        public static final int menu_selector=0x7f02001b;
        public static final int more_item_bg_selector=0x7f02001c;
        public static final int more_selector=0x7f02001d;
        public static final int more_tab_off=0x7f02001e;
        public static final int more_tab_on=0x7f02001f;
        public static final int new_playlist_dialog_bg_shape=0x7f020020;
        public static final int new_playlist_dialog_leftbutton_bg=0x7f020021;
        public static final int new_playlist_dialog_rightbutton_bg=0x7f020022;
        public static final int performer_selector=0x7f020023;
        public static final int performer_tab_off=0x7f020024;
        public static final int performer_tab_on=0x7f020025;
        public static final int play_forward_selector=0x7f020026;
        public static final int play_forward_white_selector=0x7f020027;
        public static final int play_foward_default=0x7f020028;
        public static final int play_foward_default_white=0x7f020029;
        public static final int play_foward_pressed=0x7f02002a;
        public static final int play_foward_pressed_white=0x7f02002b;
        public static final int play_next_default=0x7f02002c;
        public static final int play_next_default_white=0x7f02002d;
        public static final int play_next_pressed=0x7f02002e;
        public static final int play_next_pressed_white=0x7f02002f;
        public static final int play_next_selector=0x7f020030;
        public static final int play_next_white_selector=0x7f020031;
        public static final int play_pause_default=0x7f020032;
        public static final int play_pause_default_white=0x7f020033;
        public static final int play_pause_pressed=0x7f020034;
        public static final int play_pause_pressed_white=0x7f020035;
        public static final int play_pause_selector=0x7f020036;
        public static final int play_pause_white_selector=0x7f020037;
        public static final int play_play=0x7f020038;
        public static final int play_play_white=0x7f020039;
        public static final int play_seekbar_bg=0x7f02003a;
        public static final int play_stop=0x7f02003b;
        public static final int play_stop_white=0x7f02003c;
        public static final int playlist_selector_tab=0x7f02003d;
        public static final int playlist_tab_off=0x7f02003e;
        public static final int playlist_tab_on=0x7f02003f;
        public static final int playlist_view_bg_selector=0x7f020040;
        public static final int progress_thumb=0x7f020041;
        public static final int random_play=0x7f020042;
        public static final int remove_bg_selector=0x7f020043;
        public static final int search=0x7f020044;
        public static final int search_bg2_shape=0x7f020045;
        public static final int search_bg_shape=0x7f020046;
        public static final int search_sidebar=0x7f020047;
        public static final int seekbar_play_progress_drawable=0x7f020048;
        public static final int seekbar_volume_drawable=0x7f020049;
        public static final int seekbar_volume_thumb=0x7f02004a;
        public static final int song_pic=0x7f02004b;
        public static final int song_pic_black=0x7f02004c;
        public static final int songs_selector=0x7f02004d;
        public static final int songs_tab_off=0x7f02004e;
        public static final int songs_tab_on=0x7f02004f;
        public static final int speaker_loud=0x7f020050;
        public static final int speaker_low=0x7f020051;
        public static final int tab_bg=0x7f020052;
        public static final int textview_color_selector=0x7f020053;
        public static final int textview_touch_bg=0x7f020054;
        public static final int timer_list_selector=0x7f020055;
        public static final int title_bg=0x7f020056;
        public static final int title_gaussian_bg=0x7f020057;
        public static final int volume_point=0x7f020058;
        public static final int volume_seekbar_bg=0x7f020059;
        public static final int volume_seekbar_second_progress=0x7f02005a;
    }
    public static final class id {
        public static final int AdLinearLayout=0x7f060052;
        public static final int FrameLayout1=0x7f060037;
        public static final int ImageView_gridview=0x7f060059;
        public static final int LinearLayout1=0x7f06001b;
        public static final int LinearLayout_dialog_repeatplay_Row4=0x7f060028;
        public static final int LinearLayout_dialog_repeatply_Row123=0x7f060029;
        public static final int RelativeLayout1=0x7f060016;
        public static final int RelativeLayout2=0x7f060021;
        public static final int RelativeLayout3=0x7f06004b;
        public static final int RelativeLayout4=0x7f06004e;
        public static final int RelativeLayout5=0x7f060050;
        public static final int RelativeLayout_alertdialog_repeatplay=0x7f060026;
        public static final int RelativeLayout_back_album=0x7f06003d;
        public static final int RelativeLayout_back_performer=0x7f060040;
        public static final int RelativeLayout_back_playlist=0x7f060042;
        public static final int RelativeLayout_frame_isPlaying=0x7f060057;
        public static final int RelativeLayout_isPlaying_playlistui=0x7f060041;
        public static final int RelativeLayout_isPlaying_title_albumui=0x7f06003a;
        public static final int RelativeLayout_song_list_add_root=0x7f060099;
        public static final int RelativeLayout_text_artwork=0x7f06005a;
        public static final int RelativeLayout_titlebg=0x7f060046;
        public static final int Relativelayout_bottom=0x7f06007e;
        public static final int View1=0x7f06001a;
        public static final int action_settings=0x7f0600a4;
        public static final int albumImage=0x7f06009a;
        public static final int albumImage_in_albumlist=0x7f06001d;
        public static final int albumImage_in_menulist=0x7f060067;
        public static final int albumImage_in_playlist=0x7f06008c;
        public static final int albumImage_in_uilist=0x7f0600a1;
        public static final int album_name=0x7f06009d;
        public static final int album_title_in_albumlist=0x7f06001e;
        public static final int alwaysScroll=0x7f06000e;
        public static final int auto_fit=0x7f060015;
        public static final int blurred_image_header=0x7f060056;
        public static final int bottom=0x7f060001;
        public static final int center=0x7f060008;
        public static final int center_horizontal=0x7f060006;
        public static final int center_vertical=0x7f060004;
        public static final int clearEditText_search=0x7f060092;
        public static final int clip_horizontal=0x7f06000b;
        public static final int clip_vertical=0x7f06000a;
        public static final int columnWidth=0x7f060013;
        public static final int content=0x7f060018;
        public static final int data_gridview=0x7f060058;
        public static final int disabled=0x7f06000c;
        public static final int editText_new_playList=0x7f06006e;
        public static final int elasticListView_albumui_list=0x7f060038;
        public static final int elasticListView_horizontal=0x7f060063;
        public static final int elasticListView_list=0x7f060053;
        public static final int elasticListView_menu=0x7f060066;
        public static final int elasticListView_search=0x7f060090;
        public static final int fill=0x7f060009;
        public static final int fill_horizontal=0x7f060007;
        public static final int fill_vertical=0x7f060005;
        public static final int horizontal=0x7f060010;
        public static final int imageView=0x7f060048;
        public static final int imageView1=0x7f06004d;
        public static final int imageView4=0x7f060085;
        public static final int imageView5=0x7f060087;
        public static final int imageView6=0x7f060088;
        public static final int imageView_add_circle=0x7f06009e;
        public static final int imageView_arrow=0x7f06003c;
        public static final int imageView_arrow_left=0x7f06003e;
        public static final int imageView_artwork_behind=0x7f06005e;
        public static final int imageView_artwork_front=0x7f06005d;
        public static final int imageView_blur=0x7f060017;
        public static final int imageView_menu=0x7f06007d;
        public static final int imageView_peaker_meter=0x7f06006b;
        public static final int imageView_playbtn_next=0x7f060062;
        public static final int imageView_playbtn_pause=0x7f060060;
        public static final int imageView_playbtn_previous=0x7f060061;
        public static final int imageView_search=0x7f060097;
        public static final int iv_notification_album=0x7f060072;
        public static final int iv_notification_next=0x7f060076;
        public static final int iv_notification_pause=0x7f060074;
        public static final int iv_notification_pre=0x7f060075;
        public static final int left=0x7f060002;
        public static final int list_title_RelativeLayout=0x7f060039;
        public static final int list_title_RelativeLayout2=0x7f060043;
        public static final int music_Artist=0x7f06009c;
        public static final int music_title=0x7f06009b;
        public static final int music_title_in_playlist=0x7f06008d;
        public static final int new_playlistrow_RL=0x7f060071;
        public static final int none=0x7f060011;
        public static final int normal=0x7f06000d;
        public static final int performerImage_in_performerlist=0x7f060079;
        public static final int performer_name_in_performerlist=0x7f06007a;
        public static final int play_activity_btn_rl=0x7f06005f;
        public static final int play_progress_rl=0x7f06007f;
        public static final int random_playrow_RL=0x7f06008e;
        public static final int relativeLayout2=0x7f060027;
        public static final int rg_tab=0x7f060019;
        public static final int right=0x7f060003;
        public static final int search_RelativeLayout=0x7f060091;
        public static final int search_ll=0x7f060094;
        public static final int search_rl=0x7f06008f;
        public static final int search_text_RelativeLayout=0x7f060095;
        public static final int seekBar_playProgress=0x7f060083;
        public static final int seekBar_volume=0x7f060089;
        public static final int sideBar=0x7f060055;
        public static final int spacingWidth=0x7f060012;
        public static final int spacingWidthUniform=0x7f060014;
        public static final int swipe=0x7f0600a0;
        public static final int tableRow1=0x7f06002c;
        public static final int tableRow2=0x7f06002e;
        public static final int tableRow3=0x7f060030;
        public static final int tableRow4=0x7f06002a;
        public static final int textView=0x7f060049;
        public static final int textView1=0x7f06002d;
        public static final int textView2=0x7f06002f;
        public static final int textView3=0x7f060031;
        public static final int textView4=0x7f06002b;
        public static final int textView_album_detail=0x7f060024;
        public static final int textView_album_menulist=0x7f060069;
        public static final int textView_albumui_duration=0x7f060025;
        public static final int textView_albumui_order=0x7f060022;
        public static final int textView_artist=0x7f060084;
        public static final int textView_artist_in_albumlist=0x7f06001f;
        public static final int textView_artist_in_menulist=0x7f060068;
        public static final int textView_artwork_album_name=0x7f06005b;
        public static final int textView_artwork_artist=0x7f06005c;
        public static final int textView_clean_title_uilist=0x7f060045;
        public static final int textView_currentTime=0x7f060081;
        public static final int textView_detail=0x7f060065;
        public static final int textView_detail_uilist=0x7f0600a3;
        public static final int textView_footer=0x7f060036;
        public static final int textView_fragment_title=0x7f060047;
        public static final int textView_fragment_title_uilist=0x7f06003f;
        public static final int textView_isPlaying_music_number=0x7f06007c;
        public static final int textView_letter=0x7f060078;
        public static final int textView_letter_album=0x7f06001c;
        public static final int textView_letter_in_performerlist=0x7f060077;
        public static final int textView_menu_duration=0x7f06006c;
        public static final int textView_new_playlist_dialog=0x7f060032;
        public static final int textView_new_playlist_dialog_cancel=0x7f06006f;
        public static final int textView_new_playlist_dialog_save=0x7f060070;
        public static final int textView_numofsong_menulist=0x7f06006a;
        public static final int textView_performer_detail=0x7f06007b;
        public static final int textView_play_songName=0x7f060080;
        public static final int textView_random_play=0x7f06008b;
        public static final int textView_remaining_time=0x7f060082;
        public static final int textView_remove=0x7f06009f;
        public static final int textView_repeatPlay=0x7f06008a;
        public static final int textView_search=0x7f060096;
        public static final int textView_search_cancel=0x7f060093;
        public static final int textView_song_name_in_albumuilist=0x7f060023;
        public static final int textView_song_name_in_menu=0x7f06006d;
        public static final int textView_songsInfo_in_albumlist=0x7f060020;
        public static final int textView_title=0x7f060064;
        public static final int textView_title_done=0x7f060054;
        public static final int textView_title_in_uilist=0x7f0600a2;
        public static final int textView_title_playing=0x7f06003b;
        public static final int textView_title_uilist_delete=0x7f060044;
        public static final int top=0x7f060000;
        public static final int tv_cancel_update=0x7f060035;
        public static final int tv_more_list_item=0x7f06004a;
        public static final int tv_more_list_item2=0x7f06004c;
        public static final int tv_more_list_item3=0x7f06004f;
        public static final int tv_more_list_item4=0x7f060051;
        public static final int tv_notification_songinfo=0x7f060073;
        public static final int tv_update=0x7f060034;
        public static final int update_progress=0x7f060098;
        public static final int vertical=0x7f06000f;
        public static final int view_horizontal_line=0x7f060033;
        public static final int volum_progress_rl=0x7f060086;
    }
    public static final class layout {
        public static final int activity_add_frame=0x7f030000;
        public static final int activity_frame=0x7f030001;
        public static final int album_list_item_layout=0x7f030002;
        public static final int album_ui_list_item_layout=0x7f030003;
        public static final int alertdialog_repeatplay_ll=0x7f030004;
        public static final int check_version_dialog=0x7f030005;
        public static final int empty=0x7f030006;
        public static final int footer_view=0x7f030007;
        public static final int fragment_inner_ui_album=0x7f030008;
        public static final int fragment_inner_ui_performer=0x7f030009;
        public static final int fragment_inner_ui_playlist=0x7f03000a;
        public static final int fragment_more_layout=0x7f03000b;
        public static final int fragment_view_frame_add_rl=0x7f03000c;
        public static final int fragment_view_frame_rl=0x7f03000d;
        public static final int gridview_activity=0x7f03000e;
        public static final int gridview_item=0x7f03000f;
        public static final int horizontal_play_activity_layout=0x7f030010;
        public static final int horizontal_play_activity_list_headerview=0x7f030011;
        public static final int horizontal_play_activity_list_item_layout=0x7f030012;
        public static final int listview_empty_row=0x7f030013;
        public static final int listview_empty_rowx2=0x7f030014;
        public static final int menu_activity_rl=0x7f030015;
        public static final int menu_list_firstrow=0x7f030016;
        public static final int menu_list_item=0x7f030017;
        public static final int more_list_item_layout=0x7f030018;
        public static final int new_playlist_dialog=0x7f030019;
        public static final int new_playlist_scrollrow_rl=0x7f03001a;
        public static final int notification_layout=0x7f03001b;
        public static final int performer_list_item_layout=0x7f03001c;
        public static final int play_activity_rl=0x7f03001d;
        public static final int play_list_item_layout=0x7f03001e;
        public static final int random_playrow_rl=0x7f03001f;
        public static final int search_dialog_rl=0x7f030020;
        public static final int search_ll=0x7f030021;
        public static final int softupdate_progress=0x7f030022;
        public static final int songs_add_list_item_layout=0x7f030023;
        public static final int songs_list_item_layout=0x7f030024;
        public static final int swipeback_layout=0x7f030025;
        public static final int ui_list_firstrow=0x7f030026;
    }
    public static final class menu {
        public static final int main=0x7f0b0000;
    }
    public static final class string {
        public static final int about=0x7f090000;
        public static final int about_detail=0x7f090001;
        public static final int action_reply=0x7f090002;
        public static final int action_settings=0x7f090003;
        public static final int action_share=0x7f090004;
        public static final int add_music=0x7f090005;
        public static final int advice_collect=0x7f090006;
        public static final int album=0x7f090007;
        public static final int album_name=0x7f090008;
        public static final int app_name=0x7f090009;
        public static final int app_update=0x7f09000a;
        public static final int artist=0x7f09000b;
        public static final int cancel=0x7f09000c;
        public static final int check_version=0x7f09000d;
        public static final int clean=0x7f09000e;
        public static final int create_new_playlist=0x7f09000f;
        public static final int create_new_playlist_dialogtitle=0x7f090010;
        public static final int delete=0x7f090011;
        public static final int done=0x7f090012;
        public static final int edit=0x7f090013;
        public static final int enter_playlist_name_dialog=0x7f090014;
        public static final int grade=0x7f090015;
        public static final int hello_world=0x7f090016;
        public static final int is_updating=0x7f090017;
        public static final int isplaying_music_number=0x7f090018;
        public static final int more=0x7f090019;
        public static final int music_service_message_notification_placeholder_text_template=0x7f09001a;
        public static final int music_service_message_notification_title_template=0x7f09001b;
        public static final int new_version_checked=0x7f09001c;
        public static final int no_new_version=0x7f09001d;
        public static final int num_of_album=0x7f09001e;
        public static final int num_of_performer=0x7f09001f;
        public static final int num_of_song=0x7f090020;
        public static final int performer=0x7f090021;
        public static final int play_artist_name=0x7f090022;
        public static final int play_current_time=0x7f090023;
        public static final int play_list=0x7f090024;
        public static final int play_remaining_time=0x7f090025;
        public static final int play_song_name=0x7f090026;
        public static final int random_play=0x7f090027;
        public static final int random_play_all=0x7f090028;
        public static final int remove=0x7f090029;
        public static final int repeat_play=0x7f09002a;
        public static final int repeat_play_all_songs=0x7f09002b;
        public static final int repeat_play_song=0x7f09002c;
        public static final int save=0x7f09002d;
        public static final int search=0x7f09002e;
        public static final int share_app=0x7f09002f;
        public static final int song=0x7f090030;
        public static final int song_name=0x7f090031;
        public static final int title_playing=0x7f090032;
        public static final int title_playlist=0x7f090033;
        public static final int turnoff_repeat_play=0x7f090034;
        public static final int unknow_album=0x7f090035;
        public static final int unknow_performer=0x7f090036;
        public static final int update=0x7f090037;
        public static final int update_cancel=0x7f090038;
        public static final int use_tips=0x7f090039;
    }
    public static final class style {
        /** 
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
 API 11 theme customizations can go here. 
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
        public static final int PopupAnimation=0x7f0a0002;
        public static final int weibo_tab=0x7f0a0003;
    }
    public static final class xml {
        public static final int searchable=0x7f050000;
    }
    public static final class styleable {
        /** Attributes that can be used with a TwoWayAbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoWayAbsListView_cacheColorHint com.stark.music:cacheColorHint}</code></td><td>
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_drawSelectorOnTop com.stark.music:drawSelectorOnTop}</code></td><td>
             When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_listSelector com.stark.music:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollDirectionLandscape com.stark.music:scrollDirectionLandscape}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollDirectionPortrait com.stark.music:scrollDirectionPortrait}</code></td><td>
             Use this attribute to control which direction the GridView scrolls when in
             portrait orientation
        </td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollingCache com.stark.music:scrollingCache}</code></td><td>
             When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_smoothScrollbar com.stark.music:smoothScrollbar}</code></td><td>
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_stackFromBottom com.stark.music:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_transcriptMode com.stark.music:transcriptMode}</code></td><td>
             When set to true, the list will filter results as the user types.</td></tr>
           </table>
           @see #TwoWayAbsListView_cacheColorHint
           @see #TwoWayAbsListView_drawSelectorOnTop
           @see #TwoWayAbsListView_listSelector
           @see #TwoWayAbsListView_scrollDirectionLandscape
           @see #TwoWayAbsListView_scrollDirectionPortrait
           @see #TwoWayAbsListView_scrollingCache
           @see #TwoWayAbsListView_smoothScrollbar
           @see #TwoWayAbsListView_stackFromBottom
           @see #TwoWayAbsListView_transcriptMode
         */
        public static final int[] TwoWayAbsListView = {
            0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005,
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a
        };
        /**
          <p>
          @attr description
          
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.stark.music:cacheColorHint
        */
        public static final int TwoWayAbsListView_cacheColorHint = 5;
        /**
          <p>
          @attr description
          
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.stark.music:drawSelectorOnTop
        */
        public static final int TwoWayAbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.stark.music:listSelector
        */
        public static final int TwoWayAbsListView_listSelector = 0;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#scrollDirectionLandscape}
          attribute's value can be found in the {@link #TwoWayAbsListView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
          @attr name com.stark.music:scrollDirectionLandscape
        */
        public static final int TwoWayAbsListView_scrollDirectionLandscape = 8;
        /**
          <p>
          @attr description
          
             Use this attribute to control which direction the GridView scrolls when in
             portrait orientation
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.stark.music:scrollDirectionPortrait
        */
        public static final int TwoWayAbsListView_scrollDirectionPortrait = 7;
        /**
          <p>
          @attr description
          
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.stark.music:scrollingCache
        */
        public static final int TwoWayAbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
          
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        
 <attr name="fastScrollEnabled" format="boolean" /> 

             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.stark.music:smoothScrollbar
        */
        public static final int TwoWayAbsListView_smoothScrollbar = 6;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.stark.music:stackFromBottom
        */
        public static final int TwoWayAbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
          
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        
 <attr name="textFilterEnabled" format="boolean" /> 

             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.stark.music:transcriptMode
        */
        public static final int TwoWayAbsListView_transcriptMode = 4;
        /** Attributes that can be used with a TwoWayGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoWayGridView_columnWidth com.stark.music:columnWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_gravity com.stark.music:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_horizontalSpacing com.stark.music:horizontalSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_numColumns com.stark.music:numColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_numRows com.stark.music:numRows}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_rowHeight com.stark.music:rowHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_stretchMode com.stark.music:stretchMode}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_verticalSpacing com.stark.music:verticalSpacing}</code></td><td></td></tr>
           </table>
           @see #TwoWayGridView_columnWidth
           @see #TwoWayGridView_gravity
           @see #TwoWayGridView_horizontalSpacing
           @see #TwoWayGridView_numColumns
           @see #TwoWayGridView_numRows
           @see #TwoWayGridView_rowHeight
           @see #TwoWayGridView_stretchMode
           @see #TwoWayGridView_verticalSpacing
         */
        public static final int[] TwoWayGridView = {
            0x7f010000, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011
        };
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#columnWidth}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.stark.music:columnWidth
        */
        public static final int TwoWayGridView_columnWidth = 4;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#gravity}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
        </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
        </td></tr>
</table>
          @attr name com.stark.music:gravity
        */
        public static final int TwoWayGridView_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#horizontalSpacing}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.stark.music:horizontalSpacing
        */
        public static final int TwoWayGridView_horizontalSpacing = 1;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#numColumns}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
          @attr name com.stark.music:numColumns
        */
        public static final int TwoWayGridView_numColumns = 6;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#numRows}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
          @attr name com.stark.music:numRows
        */
        public static final int TwoWayGridView_numRows = 7;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#rowHeight}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.stark.music:rowHeight
        */
        public static final int TwoWayGridView_rowHeight = 5;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#stretchMode}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
          @attr name com.stark.music:stretchMode
        */
        public static final int TwoWayGridView_stretchMode = 3;
        /**
          <p>This symbol is the offset where the {@link com.stark.music.R.attr#verticalSpacing}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.stark.music:verticalSpacing
        */
        public static final int TwoWayGridView_verticalSpacing = 2;
    };
}
